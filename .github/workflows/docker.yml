name: Docker CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup test scenarios
        run: |
          chmod +x scripts/setup-test-scenarios.sh
          ./scripts/setup-test-scenarios.sh
      
      - name: Run CI pipeline (sequential)
        run: |
          docker compose -f docker-compose.sequential.yml up lint --abort-on-container-exit
          docker compose -f docker-compose.sequential.yml up test --abort-on-container-exit  
          docker compose -f docker-compose.sequential.yml up build-release --abort-on-container-exit
          docker compose -f docker-compose.sequential.yml up security-audit --abort-on-container-exit
      
      - name: Run integration test
        run: docker compose -f docker-compose.sequential.yml up integration-test --abort-on-container-exit

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: runtime
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      
      - name: Build release artifacts
        run: |
          mkdir -p artifacts
          docker compose -f docker-compose.ci.yml run --rm build-release
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencli-binary
          path: artifacts/opencli
